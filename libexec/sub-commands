#!/usr/bin/env bash
# Usage: sub commands
# Summary: List all sub commands
# Help: This command is mostly used for autocompletion in various shells, and for `sub help`.
# Also, this command helps find commands that are named the same as potentially builtin shell commands (which, cd, etc)

set -e

debug()
{
  test -z "$DEBUG" || echo DEBUG-COMMANDS: "$@"
}

# Provide sub completions
if [ "$1" = "--complete" ]; then
  echo --sh
  echo --no-sh
  exit
fi

if [ "$1" = "--sh" ]; then
  sh=1
  shift
elif [ "$1" = "--no-sh" ]; then
  nosh=1
  shift
fi

shopt -s nullglob


function list_commands()
{
    local dir="$1"
    local command
    for command in "$dir/sub-"*
    do
        if [[ $(basename $command) == $(basename $dir) ]]; then
            continue
        fi
        command="${command##*sub-}"
        if [[  -n $sh ]]; then
            if [[  ${command:0:3} == "sh-" ]]; then
                echo ${command##sh-}
            fi
        elif [[  -n $nosh ]]; then
            if [[  ${command:0:3} != "sh-" ]]; then
                echo ${command##sh-}
            fi
        else
            echo ${command##sh-}
        fi
    done
}


function find_command_path()
{
  local running_path="$libexec_path"
  for (( i = 1; i <= $#; i++ )); do
    running_path="$running_path/sub-${!i}"
  done
  if [[ -d $running_path ]]; then
    COMMAND_PATH="$running_path"
  else
    COMMAND_PATH=''
  fi
}

libexec_path="$_SUB_ROOT/libexec"
COMMAND_PATH=$libexec_path
if [[ $# > 0 ]]; then
    find_command_path "$@"
fi
if [[ -n $COMMAND_PATH ]]; then
    list_commands "$COMMAND_PATH" | sort | uniq
fi
